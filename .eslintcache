[{"/var/www/html/Projects/jay/jay-singh/src/Api/api.js":"1","/var/www/html/Projects/jay/jay-singh/src/containers/search-page.js":"2","/var/www/html/Projects/jay/jay-singh/src/App.js":"3","/var/www/html/Projects/jay/jay-singh/src/containers/detail-page.js":"4","/var/www/html/Projects/jay/jay-singh/src/reportWebVitals.js":"5","/var/www/html/Projects/jay/jay-singh/src/index.js":"6","/var/www/html/Projects/jay/jay-singh/src/containers/create-page.js":"7","/var/www/html/Projects/jay/jay-singh/src/containers/edit-page.js":"8","/var/www/html/Projects/jay/jay-singh/src/guarded-route.js":"9","/var/www/html/Projects/jay/jay-singh/src/containers/signup.js":"10","/var/www/html/Projects/jay/jay-singh/src/containers/login.js":"11","/var/www/html/Projects/jay/jay-singh/src/containers/likes.js":"12","/var/www/html/Projects/jay/jay-singh/src/containers/session.js":"13"},{"size":2331,"mtime":1612255468198,"results":"14","hashOfConfig":"15"},{"size":5955,"mtime":1612734074806,"results":"16","hashOfConfig":"15"},{"size":2784,"mtime":1612734128775,"results":"17","hashOfConfig":"15"},{"size":4108,"mtime":1612733444531,"results":"18","hashOfConfig":"15"},{"size":362,"mtime":1610485613498,"results":"19","hashOfConfig":"15"},{"size":500,"mtime":1610485613498,"results":"20","hashOfConfig":"15"},{"size":3776,"mtime":1611124418992,"results":"21","hashOfConfig":"15"},{"size":5148,"mtime":1611171197398,"results":"22","hashOfConfig":"15"},{"size":338,"mtime":1612133305662,"results":"23","hashOfConfig":"15"},{"size":6169,"mtime":1612446334038,"results":"24","hashOfConfig":"15"},{"size":3775,"mtime":1612446941980,"results":"25","hashOfConfig":"15"},{"size":4481,"mtime":1612258214156,"results":"26","hashOfConfig":"15"},{"size":397,"mtime":1612131439699,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"biwghy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/var/www/html/Projects/jay/jay-singh/src/Api/api.js",[],["64","65"],"/var/www/html/Projects/jay/jay-singh/src/containers/search-page.js",["66","67","68"],"import { Component } from 'react';\nimport { CallumAPI } from '../Api/api'\nimport { Link, NavLink } from 'react-router-dom';\nimport EditPageComponent from './edit-page';\n\nexport default class SearchPageComponent extends Component {\n\n    state = {\n        isLoading: true,\n        celebrities: [],\n        isDeleting: false\n    }\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        this.getArtists();\n    }\n\n    getArtists() {\n        CallumAPI.all().then(celebrities => {\n\n            this.setState({ celebrities, isLoading: false });\n        });\n\n    }\n\n    onDelete = (id) => {\n        const { celebrities } = this.state;\n        if (window.confirm('Are You sure you want to delete?')) {\n            this.setState({ isDeleting: true });\n            CallumAPI.deleteCelebrity(id).then(celebs => {\n                this.setState({ celebrities: celebrities.filter(celebrity => celebrity.id !== id), isDeleting: false });\n            }).catch(err => { this.setState({ isLoading: false, isDeleting: false }) });\n        }\n\n    }\n    onLike = async(celebrity) =>  {\n        // var file = await this.dataURLtoFile(`data:${celebrity?.imageContentType};base64,${celebrity.image}`,celebrity.imageOriginalName);\n        // celebrity.file = file;\n        this.props.onLike(celebrity);\n    }\n\n    dataURLtoFile=(dataurl, filename)=> {\n \n        var arr = dataurl.split(','),\n            mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]), \n            n = bstr.length, \n            u8arr = new Uint8Array(n);\n            \n        while(n--){\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n        \n        return new File([u8arr], filename, {type:mime});\n    }\n\n    nextPath(path) {\n        this.props.history.push(path);\n    }\n\n    render() {\n        const { isLoading, celebrities, isDeleting } = this.state;\n        return (\n            <div>\n                <div className=\"App\">\n                    <nav class=\"navbar navbar-fixed-top  navbar-expand-lg navbar-light bg-light\">\n                        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span class=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n                            <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                                <li class=\"nav-item active\">\n                                    <a class=\"nav-link\" href=\"/\">Home <span class=\"sr-only\">(current)</span></a>\n\n                                </li>\n                                <li class=\"nav-item active\">\n                                <a class=\"nav-link\" href=\"/search/likes\" >Likes</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n                <div>\n                    {isDeleting ? (\n                        <div className=\"deleting\">\n                            <div className=\"spinner-border\" role=\"status\">\n                                <span className=\"sr-only\">Deleting...</span>\n                            </div>\n                        </div>\n                    ) : ''}\n                </div>\n                <div className=\"row mr-3 ml-3 justify-content-around\">\n                    {!isLoading ? (\n                        celebrities.map(celebrity => {\n                            var base64Image = `data:${celebrity.imageContentType};base64,${celebrity.image}`;\n                            return <div className=\"col-lg-3 col-md-6 mb-4 mb-lg-0\">\n                                <div className=\"card custom-card shadow-sm border-0 rounded\">\n                                    <div className=\"card-body p-0\"><img src={`data:${celebrity.imageContentType};base64,${celebrity.image}`} alt=\"\" className=\"w-100 card-img-top\" />\n                                        <div className=\"p-4\">\n                                            <Link to={`/${celebrity.id}`} className=\"text-dark card-title\">{celebrity.firstName + ' ' + celebrity.lastName}</Link>\n                                            <p className=\"small text-muted\">{celebrity.address} - {celebrity.age}</p>\n                                        </div>\n                                        <div className=\"d-flex justify-content-around\">\n                                            {/* <div data-toggle=\"modal\" data-target=\"#exampleModalCenter\" className=\"small search-icon mb-0\"><i className=\"fas fa-edit\"></i></div> */}\n                                            <div className=\"search-icon\" onClick={() => this.onLike(celebrity)}><i className=\"fa fa-heart\" aria-hidden=\"true\" style={{ \"color\": \"red\" }}></i></div>\n                                            <div className=\"search-icon\" onClick={() => this.onDelete(celebrity.id)}><i className=\"fas fa-trash-alt\"></i></div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                                    <EditPageComponent celebrity={celebrity} />\n                                </div>\n                            </div>\n                        })\n\n                    ) : (\n                            <div className=\"d-flex justify-content-center\" >\n                                <div className=\"spinner-border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n\n                        )}\n                </div>\n            </div >\n        )\n    }\n}\n\n","/var/www/html/Projects/jay/jay-singh/src/App.js",["69","70","71","72","73","74","75","76"],"import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { CallumAPI } from './Api/api'\nimport SearchPageComponent from './containers/search-page';\nimport { BrowserRouter, useHistory, Route, Switch, Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport DetailPage from './containers/detail-page';\nimport CreatePageComponent from './containers/create-page';\nimport GuardedRoute from './guarded-route';\nimport SignupPageComponents from './containers/signup';\nimport LoginPageComponent from './containers/login';\nimport LikePageComponent from './containers/likes';\nimport UserProfile from './containers/session';\n\nfunction App() {\n\n  const [isAutheticated, setisAutheticated] = useState(false);\n  const history = useHistory();\n  let likes = '';\n  function login(celebrities) {\n    setisAutheticated(true);\n    UserProfile.setName(\"Some\");\n  }\n\n\n  function dataURLtoFile(dataurl, filename) {\n\n    var arr = dataurl.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    return new File([u8arr], filename, { type: mime });\n  }\n  function onLike(celebrity) {\n    CallumAPI.getCelebrity(window.sessionStorage.getItem(\"login\")).then(celebrities => {\n      var file = dataURLtoFile(`data:${celebrities.imageContentType};base64,${celebrities.image}`, celebrities.imageOriginalName);\n      celebrities.file = file;\n      celebrities.likes ? celebrities.likes = [...celebrities?.likes, celebrity.id] : celebrities.likes = [celebrity.id];\n      const selectedcelebrity = { ...celebrities };\n      CallumAPI.editCelebrity(selectedcelebrity, selectedcelebrity.id).then(celeb => {\n        alert(`You like ${celebrity.firstName}`)\n      });\n    });\n\n  }\n\n  function logout() {\n    setisAutheticated(false);\n    window.sessionStorage.setItem(\"login\", false);\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <GuardedRoute auth={window.sessionStorage.getItem(\"login\")} exact path='/' component={SearchPageComponent} prop={onLike = { onLike }} />\n        <Route exact path='/login' render={(props) => <LoginPageComponent {...props} onLogin={login} />}>\n        </Route>\n        <Route exact path='/signup' component={SignupPageComponents} />\n        <GuardedRoute auth={window.sessionStorage.getItem(\"login\")} exact path=\"/create/celebrity\" component={CreatePageComponent} />\n        <GuardedRoute auth={window.sessionStorage.getItem(\"login\")} exact path=\"/:id\" component={DetailPage} />\n        <GuardedRoute auth={window.sessionStorage.getItem(\"login\")} exact path=\"/search/likes\" component={LikePageComponent} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/var/www/html/Projects/jay/jay-singh/src/containers/detail-page.js",["77"],"import { Component } from 'react';\nimport { CallumAPI } from '../Api/api'\n\nexport default class DetailPage extends Component {\n  state = {\n    celebrityId: '',\n    celebrity: {},\n    isLoading: true\n  }\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    CallumAPI.getCelebrity(this.props?.match?.params?.id).then(celebrity => {\n\n      this.setState({ celebrity, isLoading: false });\n    });\n  }\n  render() {\n    const { isLoading, celebrity } = this.state;\n    return (\n      !isLoading ? (\n        <div>\n          <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\" integrity=\"sha256-h20CPZ0QyXlBuAw7A+KluUYx/3pK+c7lYEpqLTlxjYQ=\" crossOrigin=\"anonymous\" />\n          <div className=\"container\">\n            <div className=\"team-single\">\n              <div className=\"row\">\n                <div className=\"col-lg-4 col-md-5 xs-margin-30px-bottom\">\n                  <div className=\"team-single-img\">\n                    <img src={`data:${celebrity.imageContentType};base64,${celebrity.image}`} alt=\"\" />\n                  </div>\n                  <div className=\"bg-light-gray padding-30px-all md-padding-25px-all sm-padding-20px-all text-center\">\n                    <div className=\"margin-20px-top team-single-icons\">\n                      <ul className=\"no-margin\">\n                        <li><a href={celebrity.facebook}><i className=\"fab fa-facebook-f\" /></a></li>\n                        <li><a href={celebrity.twitter}><i className=\"fab fa-twitter\" /></a></li>\n                        <li><a href={celebrity.instagram}><i className=\"fab fa-instagram\" /></a></li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-8 col-md-7\">\n                  <div className=\"team-single-text padding-50px-left sm-no-padding-left\">\n      <h4 className=\"font-size38 sm-font-size32 xs-font-size30\">{celebrity.firstName+ ' '+ celebrity.lastName}</h4>\n                    <div className=\"contact-info-section margin-40px-tb\">\n                      <ul className=\"list-style9 no-margin\">\n                        <li>\n                          <div className=\"row\">\n                            <div className=\"col-md-5 col-5\">\n                              <strong className=\"margin-10px-left\">Age:</strong>\n                            </div>\n                            <div className=\"col-md-7 col-7\">\n      <p>{celebrity.age}</p>\n                            </div>\n                          </div>\n                        </li>\n                        <li>\n                          <div className=\"row\">\n                            <div className=\"col-md-5 col-5\">\n                              <i className=\"far fa-file text-lightred\" />\n                              <strong className=\"margin-10px-left\">Gender:</strong>\n                            </div>\n                            <div className=\"col-md-7 col-7\">\n      <p>{celebrity.gender}</p>\n                            </div>\n                          </div>\n                        </li>\n                        <li>\n                          <div className=\"row\">\n                            <div className=\"col-md-5 col-5\">\n                              <i className=\"fas fa-map-marker-alt text-green\" />\n                              <strong className=\"margin-10px-left \">Address:</strong>\n                            </div>\n                            <div className=\"col-md-7 col-7\">\n      <p>{celebrity.address}</p>\n                            </div>\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-12\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>) : (\n          <div class=\"d-flex justify-content-center\" >\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        )\n    );\n  }\n}","/var/www/html/Projects/jay/jay-singh/src/reportWebVitals.js",[],"/var/www/html/Projects/jay/jay-singh/src/index.js",[],"/var/www/html/Projects/jay/jay-singh/src/containers/create-page.js",["78"],"import { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CallumAPI } from '../Api/api'\n\nexport default class CreatePageComponent extends Component {\n\n    state = {\n        age: 0,\n        firstName: '',\n        lastName: '',\n        address: '',\n        gender: '',\n        file:null,\n        iSubmitted: false,\n        error: ''\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    render() {\n        const {iSubmitted, error} = this.state;\n        return (\n            <div class=\"signup-form\">\n                <form action=\"/examples/actions/confirmation.php\" method=\"post\">\n                    <h2>Add Artist</h2>\n                    <p class=\"hint-text\">Add The Artist Here</p>\n                    <div class=\"form-group\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6 col-12 mb-2\"><input type=\"text\" onChange={this.handleInputChange} class=\"form-control\" name=\"firstName\" placeholder=\"First Name\" required=\"required\" /></div>\n                            <div class=\"col-md-6 col-12\"><input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} name=\"lastName\" placeholder=\"Last Name\" required=\"required\" /></div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"email\" class=\"form-control\" name=\"address\" onChange={this.handleInputChange} placeholder=\"Address\" required=\"required\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"number\" class=\"form-control\" name=\"age\" onChange={this.handleInputChange} placeholder=\"Age\" required=\"required\" />\n                    </div>\n                    <div class=\"form-group\" onChange={this.onGenderChange}>\n                        <label className=\"mr-3\">Gender</label>\n                        <label class=\"mr-3 radio-inline\">\n                            <input className=\"mr-2\" type=\"radio\" value=\"male\" name=\"gender\"  />Male\n    </label>\n                        <label class=\"radio-inline\">\n                            <input className=\"mr-2\" type=\"radio\" value=\"female\" name=\"gender\" />Female\n    </label>\n                    </div>\n                    <div className=\"form-group d-flex justify-content-between\">\n                        <label>Add Image</label>\n                    <input type=\"file\" onChange={this.fileChange} />\n                    </div>\n                    <div class=\"form-group\">\n                        <button type=\"submit\" class=\"btn btn-success btn-lg btn-block\" onClick={this.handleSubmit}>\n                        {iSubmitted? (<i style={{'color': 'white'}} class=\"fas fa-circle-notch fa-spin\"></i>):''}\n                            Add Now</button>\n                    </div>\n        <div className=\"text-danger\">{error}</div>\n                </form>\n\n            </div>)\n\n    }\n\n    fileChange=($event) => {\n        this.setState({file:$event.target.files[0]})\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        this.setState({iSubmitted: true});\n        CallumAPI.addCelebrity(this.state).then(celebrity => {\n            this.setState({iSubmitted: false, error: ''});\n            this.props.history.push('/')\n          }).catch(err=>{this.setState({error:'Something Went Wrong', iSubmitted: false})})\n    }\n\n    handleInputChange(event) {\n\n        var key = event.target.name;\n        var value = event.target.value;\n        var obj = {};\n        obj[key] = value;\n        this.setState({[key]:value});\n    }\n\n    onGenderChange=(e)=> {\n        this.setState({ gender:e.target.value})\n    }\n}\n\n","/var/www/html/Projects/jay/jay-singh/src/containers/edit-page.js",["79"],"import { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CallumAPI } from '../Api/api'\n\nexport default class EditPageComponent extends Component {\n\n\n    state = {\n        firstName:'',\n        lastName:'',\n        age: 0,\n        file: null,\n        iSubmitted: false,\n        error: ''\n    }\n    constructor(props) {\n        super(props);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ firstName: this.props.celebrity.firstName});\n        this.setState({lastName: this.props.celebrity.lastName});\n        this.setState({address: this.props.celebrity.address});\n        this.setState({  age: this.props.celebrity.age});\n        this.setState({ gender: this.props.celebrity.gender});\n\n    }\n\n    render() {\n        const {iSubmitted, error} = this.state;\n        return (\n            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit Artist</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form action=\"/examples/actions/confirmation.php\" method=\"post\">\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-12 mb-3\"><input type=\"text\" onChange={this.handleInputChange} class=\"form-control\" name=\"firstName\" value={this.state.firstName} placeholder=\"First Name\" required=\"required\" /></div>\n                                    <div class=\"col-12\"><input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} name=\"lastName\" value={this.state.lastName} placeholder=\"Last Name\" required=\"required\" /></div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <input type=\"email\" class=\"form-control\" name=\"address\" onChange={this.handleInputChange} placeholder=\"Address\" value={this.state.address} required=\"required\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <input type=\"number\" class=\"form-control\" name=\"age\" onChange={this.handleInputChange} placeholder=\"Age\" value={this.state.age} required=\"required\" />\n                            </div>\n                            <div class=\"form-group\" onChange={this.onGenderChange.bind(this)}>\n                                <label className=\"mr-3\">Gender</label>\n                                <label class=\"mr-3 radio-inline\">\n                                    <input className=\"mr-2\" type=\"radio\" checked={this.state.gender === 'male'} value=\"male\" name=\"gender\" />Male\n    </label>\n                                <label class=\"radio-inline\">\n                                    <input className=\"mr-2\" type=\"radio\" checked={this.state.gender === 'female'} value=\"female\" name=\"gender\" />Female\n    </label>\n                            </div>\n                            <div className=\"form-group d-flex justify-content-between\">\n                                <label>Add Image</label>\n                                <input type=\"file\" onChange={this.fileChange} />\n                            </div>\n                            <div class=\"form-group\">\n                            </div>\n                        </form>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" onClick={this.handleSubmit} class=\"btn btn-primary\">\n                        {iSubmitted? (<i style={{'color': 'white'}} class=\"fas fa-circle-notch fa-spin\"></i>):''}\n                            Save changes</button>\n                        <div className=\"col-12 text-danger\">{error}</div>\n                    </div>\n                </div>\n            </div>)\n\n    }\n\n    fileChange = ($event) => {\n        this.setState({ file: $event.target.files[0] })\n    }\n    handleSubmit(event) {\n        this.setState({iSubmitted: true});\n        event.preventDefault();\n        CallumAPI.editCelebrity(this.state, this.props.celebrity.id).then(celebrity => {\n            this.setState({iSubmitted: false});\n            window.location = '/';\n        \n        }).catch(err=>{this.setState({iSubmitted: false,error:'Something Went Wrong'})});\n    }\n\n    handleInputChange(event) {\n\n        var key = event.target.name;\n        var value = event.target.value;\n        var obj = {};\n        obj[key] = value;\n        this.setState({ [key]: value });\n    }\n\n    onGenderChange = (e) => {\n        this.setState({ gender: e.target.value })\n    }\n}\n\n",["80","81"],"/var/www/html/Projects/jay/jay-singh/src/guarded-route.js",[],"/var/www/html/Projects/jay/jay-singh/src/containers/signup.js",["82"],"import { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CallumAPI } from '../Api/api'\n\nexport default class SignupPageComponents extends Component {\n\n    state = {\n        age: 0,\n        firstName: '',\n        lastName: '',\n        address: '',\n        gender: '',\n        file: null,\n        iSubmitted: false,\n        error: '',\n        email: '',\n        password: '',\n        confirmpassword:'',\n        twitter: '',\n        facebook: '',\n        instagram: ''\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    render() {\n        const { iSubmitted, error } = this.state;\n        return (\n            <div class=\"signup-form\">\n                <form action=\"/examples/actions/confirmation.php\" method=\"post\">\n                    <h2>SignUp</h2>\n                    <p class=\"hint-text\">Signup here</p>\n                    <div class=\"form-group\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6 col-12 mb-2\"><input type=\"text\" onChange={this.handleInputChange} class=\"form-control\" name=\"firstName\" placeholder=\"First Name\" required=\"required\" /></div>\n                            <div class=\"col-md-6 col-12\"><input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} name=\"lastName\" placeholder=\"Last Name\" required=\"required\" /></div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"email\" class=\"form-control\" name=\"address\" onChange={this.handleInputChange} placeholder=\"Address\" required=\"required\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"number\" class=\"form-control\" name=\"age\" onChange={this.handleInputChange} placeholder=\"Age\" required=\"required\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6 col-12 mb-2\"><input type=\"text\" onChange={this.handleInputChange} class=\"form-control\" name=\"twitter\" placeholder=\"Twitter\" required=\"required\" /></div>\n                            <div class=\"col-md-6 col-12\"><input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} name=\"instagram\" placeholder=\"Instagram\" required=\"required\" /></div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6 col-12 mb-2\"><input type=\"text\" onChange={this.handleInputChange} class=\"form-control\" name=\"facebook\" placeholder=\"Facebook\" required=\"required\" /></div>\n                            <div class=\"col-md-6 col-12\"><input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} name=\"email\" placeholder=\"Email\" required=\"required\" /></div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6 col-12 mb-2\"><input type=\"password\" onChange={this.handleInputChange} class=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"required\" /></div>\n                            <div class=\"col-md-6 col-12\"><input type=\"password\" class=\"form-control\" onChange={this.handleInputChange} name=\"confirmpassword\" placeholder=\"Confirm Password\" required=\"required\" /></div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\" onChange={this.onGenderChange}>\n                        <label className=\"mr-3\">Gender</label>\n                        <label class=\"mr-3 radio-inline\">\n                            <input className=\"mr-2\" type=\"radio\" value=\"male\" name=\"gender\" />Male\n    </label>\n                        <label class=\"radio-inline\">\n                            <input className=\"mr-2\" type=\"radio\" value=\"female\" name=\"gender\" />Female\n    </label>\n                    </div>\n                    <div className=\"form-group d-flex justify-content-between\">\n                        <label>Add Image</label>\n                        <input type=\"file\" onChange={this.fileChange} />\n                    </div>\n                    <div class=\"form-group\">\n                        <button type=\"submit\" class=\"btn btn-success btn-lg btn-block\" onClick={this.handleSubmit}>\n                            {iSubmitted ? (<i style={{ 'color': 'white' }} class=\"fas fa-circle-notch fa-spin\"></i>) : ''}\n                            Add Now</button>\n                    </div>\n                    <div className=\"text-danger\">{error}</div>\n                </form>\n\n            </div>)\n\n    }\n\n    fileChange = ($event) => {\n        this.setState({ file: $event.target.files[0] })\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        if(this.ValidateEmail(this.state.email))\n        { if(this.validatePassword(this.state.password,this.state.confirmpassword)) {\n            this.setState({ iSubmitted: true });\n            CallumAPI.addCelebrity(this.state).then(celebrity => {\n                this.setState({ iSubmitted: false, error: '' });\n                this.props.history.push('/login')\n            }).catch(err => { this.setState({ error: 'Something Went Wrong', iSubmitted: false }) })\n        }\n        }\n    }\n\n    ValidateEmail(mail) {\n        if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\n            return (true)\n        }\n        alert(\"You have entered an invalid email address!\")\n        return (false)\n    }\n\n    validatePassword(pass1,pass2) {\n        if(pass1 !== pass2) {\n            return false;\n        }\n        return true;\n    }\n\n    handleInputChange(event) {\n\n        var key = event.target.name;\n        var value = event.target.value;\n        var obj = {};\n        obj[key] = value;\n        this.setState({ [key]: value });\n    }\n\n    onGenderChange = (e) => {\n        this.setState({ gender: e.target.value })\n    }\n}\n\n","/var/www/html/Projects/jay/jay-singh/src/containers/login.js",["83","84"],"import { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CallumAPI } from '../Api/api'\nimport { useState } from 'react';\nimport {UserProfile} from './session';\n\nexport default class LoginPageComponent extends Component {\n\n    state = {\n        email: '',\n        password: ''\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    render() {\n        const { iSubmitted, error } = this.state;\n        return (\n            <div class=\"signup-form\">\n                <form action=\"/examples/actions/confirmation.php\" method=\"post\">\n                    <h2>Login</h2>\n                    <p class=\"hint-text\">Login here</p>\n                    <div class=\"form-group\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12 col-12 mb-2\"><input type=\"email\" onChange={this.handleInputChange} class=\"form-control\" name=\"email\" placeholder=\"Email\" required=\"required\" /></div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" class=\"form-control\" name=\"password\" onChange={this.handleInputChange} placeholder=\"Password\" required=\"required\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <button type=\"submit\" class=\"btn btn-success btn-lg btn-block\" onClick={this.handleSubmit}>\n                            {iSubmitted ? (<i style={{ 'color': 'white' }} class=\"fas fa-circle-notch fa-spin\"></i>) : ''}\n                            Sign in</button>\n                    </div>\n                    <div className=\"text-danger\">{error}</div>\n                    <Link to='/signup'>Not have an account? Register here</Link>\n                </form>\n\n            </div>)\n\n    }\n\n    fileChange = ($event) => {\n        this.setState({ file: $event.target.files[0] })\n    }\n    handleSubmit(event) {\n        const { email, password } = this.state;\n        event.preventDefault();\n        this.setState({ iSubmitted: true, error: '' });\n        if(this.ValidateEmail(this.state.email)) {\n            CallumAPI.all().then(celebrities => {\n\n                const celebrity = celebrities.filter(celebrity => {\n                    return celebrity.email === email;\n                })\n                if(celebrity.length)\n                {\n                    if (celebrity[0].password === password) {\n                        this.props.onLogin(celebrity[0]);\n                        this.setState({ iSubmitted: false, error: '' });\n                        window.sessionStorage.setItem(\"login\", celebrity[0].id);\n                        window.location = '/'\n                    }\n                    else {\n                        this.setState({ iSubmitted: false, error: 'Password is Not Correct!' });\n                    }\n                }\n                else {\n                    this.setState({ iSubmitted: false, error: 'Email Not Found!' });\n                }\n    \n            }).catch(err => { this.setState({ error: 'Something Went Wrong', iSubmitted: false }) })\n        }\n    }\n\n    handleInputChange(event) {\n\n        var key = event.target.name;\n        var value = event.target.value;\n        var obj = {};\n        obj[key] = value;\n        this.setState({ [key]: value });\n    }\n\n    onGenderChange = (e) => {\n        this.setState({ gender: e.target.value })\n    \n    }\n\n    ValidateEmail(mail) {\n        if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\n            return (true)\n        }\n        alert(\"You have entered an invalid email address!\")\n        return (false)\n    }\n\n}\n\n","/var/www/html/Projects/jay/jay-singh/src/containers/likes.js",["85","86","87","88","89","90"],"import { Component } from 'react';\nimport { CallumAPI } from '../Api/api'\nimport { Link } from 'react-router-dom';\nimport EditPageComponent from './edit-page';\n\n\nexport default class LikePageComponent extends Component {\n\n    state = {\n        celebrityId: '',\n        celebrity: {},\n        celebrities: [],\n        isLoading: true\n    }\n    constructor(props) {\n        super(props);\n    }\n\n    onDislike = (id) => {\n        CallumAPI.getCelebrity(window.sessionStorage.getItem(\"login\")).then(celebrities => {\n            var file = this.dataURLtoFile(`data:${celebrities.imageContentType};base64,${celebrities.image}`, celebrities.imageOriginalName);\n            celebrities.file = file;\n            celebrities.likes = celebrities.likes.filter((celeb) => celeb.id == id);\n            const selectedcelebrity = { ...celebrities };\n            CallumAPI.editCelebrity(selectedcelebrity, selectedcelebrity.id).then(celebrity => {\n\n            });\n        });\n    }\n\n    componentDidMount() {\n        CallumAPI.getCelebrity(window.sessionStorage.getItem(\"login\")).then(celebrity => {\n\n            this.setState({ celebrity });\n            this.state.celebrity.likes.map(celeb => {\n\n                CallumAPI.getCelebrity(celeb).then(celebrity => {\n\n                    this.setState({ celebrities: [...this.state.celebrities, celebrity], isLoading: false });\n                    console.log(celebrity);\n                });\n\n            })\n        });\n    }\n\n\n    dataURLtoFile(dataurl, filename) {\n\n        var arr = dataurl.split(','),\n            mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]),\n            n = bstr.length,\n            u8arr = new Uint8Array(n);\n\n        while (n--) {\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        return new File([u8arr], filename, { type: mime });\n    }\n\n\n    onDelete = (id) => {\n        this.setState({ isDeleting: true });\n        const { celebrities } = this.state;\n        if (window.confirm('Are You sure you want to delete?')) {\n            CallumAPI.deleteCelebrity(id).then(celebs => {\n                this.setState({ celebrities: celebrities.filter(celebrity => celebrity.id !== id), isDeleting: false });\n            }).catch(err => { this.setState({ isLoading: false, isDeleting: false }) });\n        }\n\n    }\n\n    render() {\n        const card = [];\n        const { isLoading, celebrities, isDeleting } = this.state;\n        return <div className=\"row mr-3 ml-3 justify-content-around\">\n            {!isLoading ? (\n                this.state.celebrities?.map(celebrity => {\n                    console.log('i am celebrity', celebrity);\n                    return <div className=\"col-lg-3 col-md-6 mb-4 mb-lg-0\">\n                        <div className=\"card custom-card shadow-sm border-0 rounded\">\n                            <div className=\"card-body p-0\"><img src={`data:${celebrity.imageContentType};base64,${celebrity.image}`} alt=\"\" className=\"w-100 card-img-top\" />\n                                <div className=\"p-4\">\n                                    <Link to={`/${celebrity.id}`} className=\"text-dark card-title\">{celebrity.firstName + ' ' + celebrity.lastName}</Link>\n                                    <p className=\"small text-muted\">{celebrity.address} - {celebrity.age}</p>\n                                </div>\n                                <div className=\"d-flex justify-content-around\">\n                                    <div className=\"search-icon\" onClick={() => this.onDislike(celebrity.id)}><i className=\"fa fa-heart-broken\" style={{ \"color\": \"red\" }}></i></div>\n                                    <div className=\"search-icon\" onClick={() => this.onDelete(celebrity.id)}><i className=\"fas fa-trash-alt\"></i></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                            <EditPageComponent celebrity={celebrity} />\n                        </div>\n                    </div>\n                })\n\n            ) : (\n                    <div className=\"d-flex justify-content-center\" >\n                        <div className=\"spinner-border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    </div>\n\n                )}\n        </div>\n\n    }\n}\n\n","/var/www/html/Projects/jay/jay-singh/src/containers/session.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":3,"column":16,"nodeType":"97","messageId":"98","endLine":3,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":14,"column":5,"nodeType":"101","messageId":"102","endLine":16,"endColumn":6},{"ruleId":"95","severity":1,"message":"103","line":98,"column":33,"nodeType":"97","messageId":"98","endLine":98,"endColumn":44},{"ruleId":"95","severity":1,"message":"104","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":12},{"ruleId":"95","severity":1,"message":"105","line":6,"column":52,"nodeType":"97","messageId":"98","endLine":6,"endColumn":60},{"ruleId":"95","severity":1,"message":"106","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":14},{"ruleId":"95","severity":1,"message":"107","line":18,"column":10,"nodeType":"97","messageId":"98","endLine":18,"endColumn":24},{"ruleId":"95","severity":1,"message":"108","line":19,"column":9,"nodeType":"97","messageId":"98","endLine":19,"endColumn":16},{"ruleId":"95","severity":1,"message":"109","line":20,"column":7,"nodeType":"97","messageId":"98","endLine":20,"endColumn":12},{"ruleId":"95","severity":1,"message":"110","line":54,"column":12,"nodeType":"97","messageId":"98","endLine":54,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":62,"column":122,"nodeType":"97","messageId":"113","endLine":62,"endColumn":128},{"ruleId":"99","severity":1,"message":"100","line":10,"column":3,"nodeType":"101","messageId":"102","endLine":12,"endColumn":4},{"ruleId":"95","severity":1,"message":"106","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"106","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"91","replacedBy":"114"},{"ruleId":"93","replacedBy":"115"},{"ruleId":"95","severity":1,"message":"106","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"116","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":18},{"ruleId":"95","severity":1,"message":"117","line":5,"column":9,"nodeType":"97","messageId":"98","endLine":5,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":15,"column":5,"nodeType":"101","messageId":"102","endLine":17,"endColumn":6},{"ruleId":"118","severity":1,"message":"119","line":23,"column":78,"nodeType":"120","messageId":"121","endLine":23,"endColumn":80},{"ruleId":"122","severity":1,"message":"123","line":35,"column":50,"nodeType":"124","messageId":"125","endLine":35,"endColumn":52},{"ruleId":"95","severity":1,"message":"126","line":76,"column":15,"nodeType":"97","messageId":"98","endLine":76,"endColumn":19},{"ruleId":"95","severity":1,"message":"127","line":77,"column":28,"nodeType":"97","messageId":"98","endLine":77,"endColumn":39},{"ruleId":"95","severity":1,"message":"128","line":77,"column":41,"nodeType":"97","messageId":"98","endLine":77,"endColumn":51},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'base64Image' is assigned a value but never used.","'logo' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'isAutheticated' is assigned a value but never used.","'history' is assigned a value but never used.","'likes' is assigned a value but never used.","'logout' is defined but never used.","no-func-assign","'onLike' is a function.","isAFunction",["129"],["130"],"'useState' is defined but never used.","'UserProfile' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'card' is assigned a value but never used.","'celebrities' is assigned a value but never used.","'isDeleting' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]